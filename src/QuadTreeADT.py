from abc import ABC, abstractmethod
from ctypes.wintypes import POINT
from typing import List
from Interval import Interval2D


class QuadTreeADT(ABC):
    @abstractmethod
    def clear(self) -> None: ...
    @abstractmethod
    def is_empty(self) -> bool: ...
    @abstractmethod
    def insert(self, x: object, y: object, value: object) -> None: ...
    @abstractmethod
    def query_2D(self, rect: Interval2D) -> None: ...
    @abstractmethod
    def search(self, point: POINT) -> object: ...
    @abstractmethod
    def all_points(self) -> List[POINT]: ...